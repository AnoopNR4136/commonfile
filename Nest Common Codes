/////////////////ALreday Exist

???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????

catch (err) {
            console.log(err)
            if (err.code === "23505") {
                throw new ConflictException('Category is already Exist !!!')
            }
            else {

                throw new InternalServerErrorException();
            }

            console.log(err)



/////////////////HashPassword


npm i bcrypt

import * as bcrypt from 'bcrypt';

const salt = await bcrypt.genSalt();

async hashPassword(password:string,salt:string) :Promise<string>{
        const hash = await bcrypt.hash(password,salt)
        console.log("Hash "+hash);
        return hash
    }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////Date Field


////////////////////////////////////////////
@Get('eligiblityCheck/:role/:doc')
  eligiblityCheck(@Param('role') role: number, @Param('doc') doc: number) {
    console.log('doc:', doc, 'role', role);

    return this.permisssionsService.eligiblityCheck(doc, role);
  }

